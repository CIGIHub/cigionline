# Generated by Django 3.2.13 on 2022-07-13 14:36

from django.db import migrations
import streams.blocks
import wagtail.blocks
import wagtail.documents.blocks
import wagtail.fields
import wagtail.images.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('newsletters', '0005_use_custom_image_model'),
    ]

    operations = [
        migrations.AlterField(
            model_name='newsletterlistpage',
            name='body',
            field=wagtail.fields.StreamField([('block_quote', wagtail.blocks.StructBlock([('quote', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link'], required=True)), ('quote_author', wagtail.blocks.CharBlock(required=False)), ('author_title', wagtail.blocks.CharBlock(required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('link_url', wagtail.blocks.URLBlock(required=False)), ('link_text', wagtail.blocks.CharBlock(required=False))])), ('embedded_multimedia', wagtail.blocks.StructBlock([('multimedia_url', wagtail.blocks.URLBlock(required=True)), ('title', wagtail.blocks.CharBlock(required=False))])), ('embedded_video', wagtail.blocks.StructBlock([('video_url', wagtail.blocks.URLBlock(required=True)), ('caption', wagtail.blocks.CharBlock(required=False)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('aspect_ratio', wagtail.blocks.ChoiceBlock(choices=[('none', 'None'), ('landscape', 'Landscape'), ('square', 'Square')]))])), ('image', wagtail.blocks.StructBlock([('image', wagtail.images.blocks.ImageChooserBlock(required=True)), ('hide_image_caption', wagtail.blocks.BooleanBlock(required=False))])), ('inline_video', streams.blocks.InlineVideoBlock(page_type=['multimedia.MultimediaPage'])), ('paragraph', streams.blocks.ParagraphBlock()), ('table', streams.blocks.TableStreamBlock()), ('text_background_block', streams.blocks.TextBackgroundBlock(features=['bold', 'italic', 'link']))], blank=True, use_json_field=True),
        ),
        migrations.AlterField(
            model_name='newsletterlistpage',
            name='hero_link',
            field=wagtail.fields.StreamField([('hero_link', wagtail.blocks.StructBlock([('hero_link_text', wagtail.blocks.CharBlock(required=True)), ('hero_link_url', wagtail.blocks.CharBlock(required=True)), ('hero_link_icon', wagtail.blocks.CharBlock(help_text='Use a font-awesome icon name such as fa-envelope', required=False))])), ('hero_document', wagtail.blocks.StructBlock([('hero_link_text', wagtail.blocks.CharBlock(required=True)), ('hero_link_document', wagtail.documents.blocks.DocumentChooserBlock(required=True)), ('hero_link_icon', wagtail.blocks.CharBlock(help_text='Use a font-awesome icon name such as fa-envelope', required=False))]))], blank=True, help_text='Text with link to url, email or document and optional icon that appears below the page title in the hero section.', use_json_field=True),
        ),
        migrations.AlterField(
            model_name='newsletterpage',
            name='body',
            field=wagtail.fields.StreamField([('advertisement_block', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link'], required=False)), ('url', wagtail.blocks.URLBlock(required=True)), ('image', wagtail.images.blocks.ImageChooserBlock(required=False)), ('cta', wagtail.blocks.ChoiceBlock(choices=[('explore', 'Explore'), ('follow', 'Follow'), ('learn_more', 'Learn More'), ('listen', 'Listen'), ('no_cta', 'No CTA'), ('pdf', 'PDF'), ('read', 'Read'), ('rsvp', 'RSVP'), ('share_facebook', 'Share (Facebook)'), ('share_linkedin', 'Share (LinkedIn)'), ('share_twitter', 'Share (Twitter)'), ('subscribe', 'Subscribe'), ('watch', 'Watch')], verbose_name='CTA'))])), ('content_block', wagtail.blocks.StructBlock([('content', wagtail.blocks.PageChooserBlock(required=False)), ('url', wagtail.blocks.URLBlock(required=False)), ('title_override', wagtail.blocks.CharBlock(required=False)), ('text_override', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link'], required=False)), ('cta', wagtail.blocks.ChoiceBlock(choices=[('explore', 'Explore'), ('follow', 'Follow'), ('learn_more', 'Learn More'), ('listen', 'Listen'), ('no_cta', 'No CTA'), ('pdf', 'PDF'), ('read', 'Read'), ('rsvp', 'RSVP'), ('share_facebook', 'Share (Facebook)'), ('share_linkedin', 'Share (LinkedIn)'), ('share_twitter', 'Share (Twitter)'), ('subscribe', 'Subscribe'), ('watch', 'Watch')], verbose_name='CTA')), ('line_separator_above', wagtail.blocks.BooleanBlock(required=False, verbose_name='Add line separator above block'))])), ('featured_content_block', wagtail.blocks.StructBlock([('content', wagtail.blocks.PageChooserBlock(required=False)), ('url', wagtail.blocks.URLBlock(required=False)), ('title_override', wagtail.blocks.CharBlock(required=False)), ('text_override', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link'], required=False)), ('image_override', wagtail.images.blocks.ImageChooserBlock(required=False)), ('cta', wagtail.blocks.ChoiceBlock(choices=[('explore', 'Explore'), ('follow', 'Follow'), ('learn_more', 'Learn More'), ('listen', 'Listen'), ('no_cta', 'No CTA'), ('pdf', 'PDF'), ('read', 'Read'), ('rsvp', 'RSVP'), ('share_facebook', 'Share (Facebook)'), ('share_linkedin', 'Share (LinkedIn)'), ('share_twitter', 'Share (Twitter)'), ('subscribe', 'Subscribe'), ('watch', 'Watch')], verbose_name='CTA'))])), ('social_block', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link'], required=False))])), ('text_block', wagtail.blocks.StructBlock([('title', wagtail.blocks.CharBlock(required=False)), ('text', wagtail.blocks.RichTextBlock(features=['bold', 'italic', 'link'], required=False))]))], blank=True, use_json_field=True),
        ),
    ]
