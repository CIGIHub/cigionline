# Generated by Django 4.0 on 2022-12-20 19:38

from django.db import migrations
import wagtail.blocks
import wagtail.fields
import wagtail.images.blocks
import wagtail.snippets.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('home', '0015_alter_homepage_layout'),
    ]

    operations = [
        migrations.AlterField(
            model_name='homepage',
            name='layout',
            field=wagtail.fields.StreamField([('row', wagtail.blocks.StructBlock([('row', wagtail.blocks.StreamBlock([('article_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['articles.ArticlePage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')]))])), ('publication_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['publications.PublicationPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('medium_vertical', 'Medium Vertical'), ('large', 'Large')]))])), ('article_series_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['articles.ArticleSeriesPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('medium_vertical', 'Medium Vertical'), ('large', 'Large')]))])), ('event_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['events.EventPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')]))])), ('multimedia_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['multimedia.MultimediaPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')])), ('multimedia_type', wagtail.blocks.ChoiceBlock(choices=[('video', 'Video'), ('podcast', 'Podcast')]))])), ('expert_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['people.PersonPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium')]))])), ('ad_card', wagtail.blocks.StructBlock([('url', wagtail.blocks.URLBlock(required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')])), ('image', wagtail.images.blocks.ImageChooserBlock(required=True))])), ('most_popular', wagtail.blocks.StructBlock([('most_popular_cards', wagtail.blocks.StreamBlock([('article_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['articles.ArticlePage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')]))])), ('publication_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['publications.PublicationPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('medium_vertical', 'Medium Vertical'), ('large', 'Large')]))])), ('article_series_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['articles.ArticleSeriesPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('medium_vertical', 'Medium Vertical'), ('large', 'Large')]))])), ('event_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['events.EventPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')]))])), ('multimedia_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['multimedia.MultimediaPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium'), ('large', 'Large')])), ('multimedia_type', wagtail.blocks.ChoiceBlock(choices=[('video', 'Video'), ('podcast', 'Podcast')]))])), ('expert_card', wagtail.blocks.StructBlock([('page', wagtail.blocks.PageChooserBlock(page_type=['people.PersonPage'], required=True)), ('size', wagtail.blocks.ChoiceBlock(choices=[('tiny', 'Tiny'), ('small', 'Small'), ('medium', 'Medium')]))]))]))]))])), ('grouped', wagtail.blocks.BooleanBlock(default=False, help_text='Group cards into rows with a grey background.', required=False))])), ('social_swiper_row', wagtail.blocks.StructBlock([('social_swiper_cards', wagtail.blocks.StreamBlock([('twitter_card', wagtail.blocks.StructBlock([('tweet', wagtail.snippets.blocks.SnippetChooserBlock(required=True, target_model='social.Tweet'))]))]))]))], blank=True, use_json_field=None),
        ),
    ]
